(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{206:function(e,_,s){"use strict";s.r(_);var t=s(0),a=Object(t.a)({},(function(){var e=this,_=e.$createElement,s=e._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引","aria-hidden":"true"}},[e._v("#")]),e._v(" 索引")]),e._v(" "),s("p",[e._v("相信细心的小伙伴已经发现了，两个表里面除了主键外均是没有建立索引的。而依据具体的业务我们很容易能发现在 "),s("code",[e._v("user_sn")]),e._v(" 用户编号上\n适合建立唯一索引。如果用户名 "),s("code",[e._v("user_name")]),e._v(" 和手机号 "),s("code",[e._v("phone")]),e._v(" 经常会被用于查询用户信息，那么在其字段上建议索引也是合理的。")]),e._v(" "),s("h3",{attrs:{id:"索引的创建与删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引的创建与删除","aria-hidden":"true"}},[e._v("#")]),e._v(" 索引的创建与删除")]),e._v(" "),s("p",[s("strong",[e._v("创建索引")])]),e._v(" "),s("blockquote",[s("p",[e._v("CREATE INDEX indexName ON mytable(username(length));")])]),e._v(" "),s("blockquote",[s("p",[e._v("ALTER table tableName ADD INDEX indexName(columnName);")])]),e._v(" "),s("p",[s("strong",[e._v("删除索引")])]),e._v(" "),s("blockquote",[s("p",[e._v("DROP INDEX [indexName] ON mytable;")])]),e._v(" "),s("p",[s("strong",[e._v("唯一索引")])]),e._v(" "),s("blockquote",[s("p",[e._v("CREATE UNIQUE INDEX indexName ON mytable(username(length));")])]),e._v(" "),s("blockquote",[s("p",[e._v("ALTER table tableName ADD UNIQUE [indexName] (username(length));")])]),e._v(" "),s("p",[s("strong",[e._v("显示索引")])]),e._v(" "),s("blockquote",[s("p",[e._v("SHOW INDEX FROM tableName;")])]),e._v(" "),s("h3",{attrs:{id:"查询用户基本信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询用户基本信息","aria-hidden":"true"}},[e._v("#")]),e._v(" 查询用户基本信息")]),e._v(" "),s("p",[e._v("首先为了每次查询都是公平的，我们禁用掉数据库缓存（万万不可拿生产的数据库做此实验）")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("set global query_cache_size=0;\nset global query_cache_type=0;\n")])])]),s("p",[e._v("业务系统中不宜将自增的 "),s("code",[e._v("id")]),e._v(" 暴露出去，所以这里选择使用 "),s("code",[e._v("user_sn")]),e._v(" 来查询对应的用户信息。")]),e._v(" "),s("blockquote",[s("p",[e._v("select * from "),s("code",[e._v("user")]),e._v(" where user_sn = '826104d6e34b11e9be1768f72847b82b'; -- 1.369s")])]),e._v(" "),s("p",[e._v("可以明显的看到这个查询耗时太久了，我们知道 "),s("code",[e._v("user_sn")]),e._v(" 是非空且唯一的 uuid，所以这里我们加上唯一索引。")]),e._v(" "),s("blockquote",[s("p",[e._v("CREATE UNIQUE INDEX unique_key_user_user_sn ON user(user_sn(32)); -- 5.660s")])]),e._v(" "),s("p",[e._v("建立好唯一索引之后再来查询一次")]),e._v(" "),s("blockquote",[s("p",[e._v("select * from "),s("code",[e._v("user")]),e._v(" where user_sn = '826104d6e34b11e9be1768f72847b82b'; -- 0.004s")])]),e._v(" "),s("p",[e._v("建立了唯一索引之后查询效率提升了 342 倍，这里是基于 100 万数据的查询结果。显而易见的是在加了索引之后的查询不会搜全表，而不加索引的查询会搜全表。")]),e._v(" "),s("p",[e._v("最后试试把唯一索引换成普通的 Btree 索引的查询效率")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("DROP INDEX unique_key_user_user_sn ON user;\nCREATE INDEX key_user_user_sn ON user( user_sn(32) );  -- 5.671s\n")])])]),s("blockquote",[s("p",[e._v("select * from "),s("code",[e._v("user")]),e._v(" where user_sn = '826104d6e34b11e9be1768f72847b82b'; -- 0.003s")])]),e._v(" "),s("p",[e._v("我们这里看到的结果是建立普通索引和唯一索引之后的查询效率是差不多的。")])])}),[],!1,null,null,null);_.default=a.exports}}]);